RL --- Remote Library
PY --- Python


pwd
ls -al
mkdir <projects>
clear

# create a folder
cd projects/

# initiate Demo folder in project folder
git init demo
ls

# change to DEMO folder
cd demo/
ls -al

# git status
git status

# create a file
npp README.md
git status

# GIT working >> Git staging >> GIT repository  >> GIT remote repository
# to add file from GIT working directory to staging area
git add README.md
git status

# to git repository
git commit -m"demo repository"
git status

# change to .git folder
cd.git/
ls -al

#back up to demo (working) directory ; enter space for cd
cd ..
clear

# remove .git folder
rm -rf .git

# to empty .git folder in DEMO folder
git init .git
ls -al
git status

# add all files to GIT staging area
git add .
git status

# to commit all files ( open text editor ; enter the commit line)
git commit
git status
git show

# press Q (button) to come out of the show command

git bisect (to identify uncommitted changes)
# git tracking files
git ls-files

# add new file 
touch <filename>

# remove a file 
rm <filename>

# adding modified files to git staging area, then commit 
git commit -am

#to remove the changes from git staging 
git reset HEADE README.md
git status

# to remove changes from file or revert the file before changes.


# …or push an existing repository from the command line
git remote add origin1 https://github.com/Sateesh110/Demo.git
git push -u origin1 master

# create alias commands
git config --global alias.hist "log --oneline --graph --decorate --all"
git hist

# to check config 
git config --global --list

# to check history of file using alias "hist" command
git hist --LICENSE.md

# to add a file 
npp example.txt
git status

# commit the file 
git add example. txt
git commit -m"adding new file"
git status
git log
ls

# rename a file name gi
git mv example.txt demo.txt
git status
ls
git commit -m"renamed the example to demo"


# delete a file
git rm demo.txt
ls
git commit -m"deleting the demo file"











